- hosts: all
  become: true
  gather_facts: false
  tasks:

  - name: Create .ssh subdirectory
    file:
        path: ~/.ssh
        mode: '0700'
        state: directory

  - name: Operations on management hosts
    block:
      - name: Copy private key to management hosts
        copy:
            src: '../{{ ansible_private_key_file }}'
            dest: '~/.ssh/id_rsa'
            mode: '0600'
      - name: Check if ssh key pair already exists
        shell: |
            if [ ! -f ~/.ssh/id_rsa -o ! -f ~/.ssh/id_rsa.pub ]; then
                rm ~/.ssh/id_rsa.pub
                exit 1
            else
                exit 0
            fi
        ignore_errors: yes
        register: sshpair_exist
      - name: Create a public key
        shell: ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ''
        when: sshpair_exist.rc != 0 
      - name: Retrieve a public ssh key
        fetch:
            src: ~/.ssh/id_rsa.pub
            dest: ~/tmp/
            flat: yes
    when: inventory_hostname in groups['management']

  - name: Taking a public key into memory
    set_fact: 
        sshpair_pubkey: "{{ lookup('file', '~/tmp/id_rsa.pub') }}"  


  - name: Distribute public ssh key to managed hosts
    authorized_key:
        key: "{{ sshpair_pubkey }}"
        manage_dir: yes
        user: root

    



  - name: Check if the key has a public key
    become: false
    run_once: true
    local_action: stat path='{{ playbook_dir }}/../{{ ansible_private_key_file }}.pub'
    register: pubkey



  - name: Create a public key, if needed
    become: false
    run_once: true
    local_action: shell '/usr/bin/ssh-keygen -y -f {{ playbook_dir }}/../{{ ansible_private_key_file }} > {{ playbook_dir }}/../{{ ansible_private_key_file }}.pub'    
    when: not pubkey.stat.exists

