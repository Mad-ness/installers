- hosts: k8s-all
  become: true
  gather_facts: false
  tasks:
  - name: Install kubernetes.repo
    copy:
        dest: /etc/yum.repos.d/kubernetes.repo
        content: |
            [kubernetes]
            name=Kubernetes
            baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
            enabled=1
            gpgcheck=0
            repo_gpgcheck=0
            gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            # exclude=kube*
        owner: root
        group: root
        mode: '0644'

  - name: Disable SELinux
    selinux: state=disabled

  - name: Install kube* utilities
    yum: name='{{ item }}' state=present update_cache=true
    with_items: [ kubelet, kubeadm, kubectl, kubernetes-cni ]
    notify:
    - restart_kubelet

  - name: Update /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    lineinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        regexp: '^Environment=\"KUBELET_EXTRA_ARGS=.*$'
        line: 'Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=systemd"'
        insertafter: '^\[Service\].*'
    register: service_updated
    notify:
    - systemd_daemon_reload
    - restart_kubelet


#  - name: Update /etc/systemd/system/kubelet.service file
#    copy:
#        dest: /etc/systemd/system/kubelet.service
#        content: |
#            [Unit]
#            Description=kubelet: The Kubernetes Node Agent
#            Documentation=https://kubernetes.io/docs/
#            
#            [Service]
#            ExecStart=/usr/bin/kubelet
#            Restart=always
#            StartLimitInterval=0
#            RestartSec=10
#            
#            [Install]
#            WantedBy=multi-user.target
#        owner: root
#        group: root
#        mode: '0644'
#    register: service_updated
#    notify:
#    - systemd_daemon_reload

  - meta: flush_handlers
    when: service_updated.state | changed

  - name: Make Kube* services enabled and running
    service: name='{{ item }}' state=started enabled=on
    with_items: [ kubelet, ]

  - name: Update sysctl
    sysctl: name='{{ item }}' value=1 state=present
    with_items: [ net.bridge.bridge-nf-call-ip6tables, net.bridge.bridge-nf-call-iptables ]

  handlers:
  - name: systemd_daemon_reload
    command: systemctl daemon-reload

  - name: restart_kubelet
    service: name=kubelet state=restarted


