heat_template_version: 2018-03-02
description: A template for creating a customized server

parameters:
    master_image:
        type: string
        label: Image name or ID
        description: Image used to create an instance from
        default: CentOS-7
    master_flavor:
        type: string
        label: Flavor
        description: Flavor to set a proper set of resources
        default: d1.os-master

    infra_image:
        type: string
        label: Image name or ID
        description: Image used to create an instance from
        default: CentOS-7
    infra_flavor:
        type: string
        label: Flavor
        description: Flavor to set a proper set of resources
        default: d1.os-node




    storage_image:
        type: string
        label: Image name or ID
        description: Image used to create an instance from
        default: CentOS-7
    storage_flavor:
        type: string
        label: Flavor
        description: Flavor to set a proper set of resources
        default: d1.os-node

    app_image:
        type: string
        label: Image name or ID
        description: Image used to create an instance from
        default: CentOS-7
    app_flavor:
        type: string
        label: Flavor
        description: Flavor to set a proper set of resources
        default: d1.os-node

    public_network:
        type: string
        label: API Network
        description: A network to connect to
        default: ipsystems-management
    network_cidr:
        type: string
        label: The CIDR of the network
        default: 10.189.132.0/25
        description: Make sure this subnet exists
    key_name:
        type: string
        label: Key name
        description: Name of key-pair to be installed on a created server
        default: dmitrii-key1
    external_network:
        type: string
        label: External/API network
        description: All server should be connected to thi network
        default: "ipsystems-management"
    user_data:
        type: string
        label: Software configuration
        default: |
            #!/usr/bin/env bash
            sed -i -e 's/^PasswordAuthentication.*$/PasswordAuthentication yes/g' /etc/ssh/sshd_config
            echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config
            systemctl restart sshd
            echo 'Admin123' | passwd --stdin root
            yum update -y
            yum install -y epel-release
            yum update -y || true
        description: Put there a script that is being executing upon a server gets up

resources:

    sshkey:
        type: OS::Nova::KeyPair
        properties:
            save_private_key: true
            name: sshkey

    server_group:
        type: OS::Nova::ServerGroup
        properties:
            policies: [ "affinity", ]

    private_network:
        type: OS::Neutron::Net
        properties:
            shared: false
    private_subnet:
        type: OS::Neutron::Subnet
        properties:
            network: { get_resource: private_network }
            allocation_pools:
              - start: 100.0.0.11
                end:   100.0.0.250
            cidr: 100.0.0.0/24
            dns_nameservers: [ '100.0.0.1', ]
            enable_dhcp: true
            gateway_ip: '100.0.0.1'
            host_routes:
              - destination: 0.0.0.0/0
                nexthop: 100.0.0.1

    storage_network:
        type: OS::Neutron::Net
        properties:
            shared: false
    storage_subnet:
        type: OS::Neutron::Subnet
        properties:
            network: { get_resource: storage_network }
            allocation_pools:
              - start: 200.0.0.11
                end:   200.0.0.250
            cidr: 200.0.0.0/24
            dns_nameservers: [ '200.0.0.1', ]
            enable_dhcp: false




    masters:
        type: lib/masters.yaml
        properties:
            image: { get_param: master_image }
            flavor: { get_param: master_flavor }
            key_name: { get_resource: sshkey }
            public_network: { get_param: public_network }
            private_network: { get_resource: private_network }
            storage_network: { get_resource: storage_network }
            port1_allowed_tcp_ports: "22,53,8053,443,8443,10250,10010,2049,2379,2380,9000,8444,1936"
            port1_allowed_udp_ports: "4789,53,8053,443,2049"
            cluster_vip_allowed_tcp_ports: "22,8443"
            user_data: { get_param: user_data }
            scheduler_hints: { get_resource: server_group }

    infras:
        type: lib/infras.yaml
        properties:
            image: { get_param: infra_image }
            flavor: { get_param: infra_flavor }
            key_name: { get_resource: sshkey }
            public_network: { get_param: public_network }
            private_network: { get_resource: private_network }
            storage_network: { get_resource: storage_network }
            port1_allowed_tcp_ports: "22,53,8053,443,8443,10250,10010,2049,2379,2380,9000,8444,1936"
            port1_allowed_udp_ports: "4789,53,8053,443,2049"
            cluster_vip_allowed_tcp_ports: "22,53,8053,443,8443,10250,10010,2049,2379,2380,9000,8444,1936"
            cluster_vip_allowed_udp_ports: "4789,53,8053,443,2049"
            user_data: { get_param: user_data }
            scheduler_hints: { get_resource: server_group }


    apps:
        type: lib/apps.yaml
        properties:
            image: { get_param: app_image }
            flavor: { get_param: app_flavor }
            key_name: { get_resource: sshkey }
            public_network: { get_param: public_network }
            private_network: { get_resource: private_network }
            storage_network: { get_resource: storage_network }
            port1_allowed_tcp_ports: "22,53,8053,443,8443,10250,10010,2049,2379,2380,9000,8444,1936"
            port1_allowed_udp_ports: "4789,53,8053,443,2049"
            user_data: { get_param: user_data }
            scheduler_hints: { get_resource: server_group }

    storages:
        type: lib/storages.yaml
        properties:
            image: { get_param: storage_image }
            flavor: { get_param: storage_flavor }
            key_name: { get_resource: sshkey }
            public_network: { get_param: public_network }
            private_network: { get_resource: private_network }
            storage_network: { get_resource: storage_network }
            port1_allowed_tcp_ports: "22,53,8053,443,8443,10250,10010,2049,2379,2380,9000,8444,1936"
            port1_allowed_udp_ports: "4789,53,8053,443,2049"
            user_data: { get_param: user_data }
            scheduler_hints: { get_resource: server_group }

    services:
        type: lib/services.yaml
        properties:
            image: { get_param: app_image }
            flavor: { get_param: app_flavor }
            key_name: { get_resource: sshkey }
            public_network: { get_param: public_network }
            private_network: { get_resource: private_network }
            port1_allowed_tcp_ports: "22,53,8053,443,8443,10250,10010,2049,2379,2380,9000,8444,1936"
            port1_allowed_udp_ports: "4789,53,8053,443,2049"
            user_data: { get_param: user_data }
            scheduler_hints: { get_resource: server_group }


outputs:

    private_key: { value: { get_attr: [ sshkey, private_key ]}}

    bastion_ip1: { value: { get_attr: [ services, bastion_ip1 ]}}
    bastion_ip2: { value: { get_attr: [ services, bastion_ip2 ]}}

#     storage_subnet_cidr: { value: { get_attr: [ storages, storage_subnet_cidr ]}}
    storage_subnet_cidr: { value: { get_attr: [ storage_subnet, cidr ]}}
    api_subnet_cidr: { value: { get_attr: [ private_subnet, cidr ]}}
    local_dns_ip: { value: { get_attr: [ services, bastion_ip2 ]}}

##    cluster_vip_ip1: { value: { get_attr: [ masters, cluster_vip ]}}
##    buildhost_ip1: { value: { get_attr: [ services, buildhost_ip1 ]}}
#    dnsserver_ip1: { value: { get_attr: [ services, buildhost_ip1 ]}}

    master_cluster_public_vip: { value: { get_attr: [ masters, cluster_public_vip ]}}
    master_cluster_private_vip: { value: { get_attr: [ masters, cluster_private_vip ]}}

    master1_ip1: { value: { get_attr: [ masters, master1_ip1 ]}}
    master1_ip2: { value: { get_attr: [ masters, master1_ip2 ]}}
    master1_storage_ip: { value: { get_attr: [ masters, master1_storage_ip ]}}
    master2_ip1: { value: { get_attr: [ masters, master2_ip1 ]}}
    master2_ip2: { value: { get_attr: [ masters, master2_ip2 ]}}
    master2_storage_ip: { value: { get_attr: [ masters, master2_storage_ip ]}}
    master3_ip1: { value: { get_attr: [ masters, master3_ip1 ]}}
    master3_ip2: { value: { get_attr: [ masters, master3_ip2 ]}}
    master3_storage_ip: { value: { get_attr: [ masters, master3_storage_ip ]}}


    infra_public_vip1: { value: { get_attr: [ infras, cluster_public_vip1 ]}}
    # infra_private_vip1: { value: { get_attr: [ infras, cluster_private_vip1 ]}}
    infra_public_vip2: { value: { get_attr: [ infras, cluster_public_vip2 ]}}
    # infra_private_vip2: { value: { get_attr: [ infras, cluster_private_vip2 ]}}
    # cluster_public_ip: { value: { get_attr: [ infras, cluster_ip1 ]}}
    # cluster_private_ip: { value: { get_attr: [ infras, cluster_ip2 ]}}


    infra1_ip1: { value: { get_attr: [ infras, infra1_ip1 ]}}
    infra1_ip2: { value: { get_attr: [ infras, infra1_ip2 ]}}
    infra1_storage_ip: { value: { get_attr: [ infras, infra1_storage_ip ]}}
    infra2_ip1: { value: { get_attr: [ infras, infra2_ip1 ]}}
    infra2_ip2: { value: { get_attr: [ infras, infra2_ip2 ]}}
    infra2_storage_ip: { value: { get_attr: [ infras, infra2_storage_ip ]}}

    # infra3_ip1: { value: { get_attr: [ infras, infra3_ip1 ]}}
    # infra3_ip2: { value: { get_attr: [ infras, infra3_ip2 ]}}


    app1_ip1: { value: { get_attr: [ apps, app1_ip1 ]}}
    app1_ip2: { value: { get_attr: [ apps, app1_ip2 ]}}
    app1_storage_ip: { value: { get_attr: [ apps, app1_storage_ip ]}}
    app2_ip1: { value: { get_attr: [ apps, app2_ip1 ]}}
    app2_ip2: { value: { get_attr: [ apps, app2_ip2 ]}}
    app2_storage_ip: { value: { get_attr: [ apps, app2_storage_ip ]}}
    app3_ip1: { value: { get_attr: [ apps, app3_ip1 ]}}
    app3_ip2: { value: { get_attr: [ apps, app3_ip2 ]}}
    app3_storage_ip: { value: { get_attr: [ apps, app3_storage_ip ]}}

    # app4_ip1: { value: { get_attr: [ apps, app4_ip1 ]}}
    # app4_ip2: { value: { get_attr: [ apps, app4_ip2 ]}}
    # app4_storage_ip: { value: { get_attr: [ apps, app4_storage_ip ]}}

    # app5_ip1: { value: { get_attr: [ apps, app5_ip1 ]}}
    # app5_ip2: { value: { get_attr: [ apps, app5_ip2 ]}}
    # app5_storage_ip: { value: { get_attr: [ apps, app5_storage_ip ]}}

    app_floating_vip_1: { value: { get_attr: [ apps, app_floating_vip1 ]}}
    app_floating_vip_2: { value: { get_attr: [ apps, app_floating_vip2 ]}}
    app_floating_vip_3: { value: { get_attr: [ apps, app_floating_vip3 ]}}
    app_floating_vip_4: { value: { get_attr: [ apps, app_floating_vip4 ]}}
    app_floating_vip_5: { value: { get_attr: [ apps, app_floating_vip5 ]}}
    app_floating_vip_6: { value: { get_attr: [ apps, app_floating_vip6 ]}}
    app_floating_vip_7: { value: { get_attr: [ apps, app_floating_vip7 ]}}
    app_floating_vip_8: { value: { get_attr: [ apps, app_floating_vip8 ]}}
    app_floating_vip_9: { value: { get_attr: [ apps, app_floating_vip9 ]}}
    app_floating_vip_10: { value: { get_attr: [ apps, app_floating_vip10 ]}}


    storage1_ip1: { value: { get_attr: [ storages, storage1_ip1 ]}}
    storage1_ip2: { value: { get_attr: [ storages, storage1_ip2 ]}}
    storage1_ip3: { value: { get_attr: [ storages, storage1_ip3 ]}}
    storage2_ip1: { value: { get_attr: [ storages, storage2_ip1 ]}}
    storage2_ip2: { value: { get_attr: [ storages, storage2_ip2 ]}}
    storage2_ip3: { value: { get_attr: [ storages, storage2_ip3 ]}}
    storage3_ip1: { value: { get_attr: [ storages, storage3_ip1 ]}}
    storage3_ip2: { value: { get_attr: [ storages, storage3_ip2 ]}}
    storage3_ip3: { value: { get_attr: [ storages, storage3_ip3 ]}}
